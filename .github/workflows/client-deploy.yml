name: CI/CD for Angular App

on:
  push:
    branches:
      - main
    paths:
      - 'apps/client/**'

jobs:
  build-deploy:
    name: Build and Deploy Angular App
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      # Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Build the Angular project
      - name: Build Angular App
        run: npm run nx build client --configuration production

      # Configure AWS CLI
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-cli@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Prune old builds in the S3 bucket
      - name: Prune Old Builds in S3
        run: |
          aws s3api list-object-versions --bucket $BUCKET_NAME \
          | jq -r '.Versions[] | select(.IsLatest == false) | .Key + " " + .VersionId' \
          | while read key version_id; do
              aws s3api delete-object --bucket $BUCKET_NAME --key "$key" --version-id "$version_id"
            done

      # Deploy the Angular app to S3
      - name: Deploy to S3
        run: |
          aws s3 sync ./dist/apps/client s3://$BUCKET_NAME --delete --exact-timestamps

      # Invalidate CloudFront Cache
      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
          --distribution-id $DISTRIBUTION_ID \
          --paths "/*"
